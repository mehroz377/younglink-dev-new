# Stage 1: Build PHP dependencies
FROM php:8.2-fpm-alpine AS php_base

# Install PHP extensions
RUN apk add --no-cache --virtual .build-deps icu-dev
RUN docker-php-ext-install pdo pdo_mysql intl

# Set working directory
WORKDIR /var/www/html

# Copy the application code
COPY . /var/www/html


# Install Composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer


# Install Composer and application dependencies
ENV COMPOSER_ALLOW_SUPERUSER=1
COPY --from=composer /usr/bin/composer /usr/bin/composer
ENV APP_ENV="prod"
RUN composer install --no-dev --optimize-autoloader --no-scripts --no-progress

# Stage 2: Build final image with Caddy server
FROM caddy:alpine

# Expose port 80
EXPOSE 80

# Copy built files from PHP image
COPY --from=php_base /var/www/html /var/www/html

# Set working directory
WORKDIR /var/www/html

# Copy Caddyfile
COPY Caddyfile /etc/caddy/Caddyfile

# Run Caddy server
CMD ["caddy", "run", "--config", "/etc/caddy/Caddyfile"]

